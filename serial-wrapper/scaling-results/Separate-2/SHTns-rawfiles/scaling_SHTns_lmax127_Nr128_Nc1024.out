 //////////////////////////////////////
 Initializating Rayleigh...

 -- Initalizing MPI...
 ---- Specified parameters:
 ---- NCPU  :   1024
 ---- NPROW :     32
 ---- NPCOL :     32
 -- MPI initialized.


 -- Initalizing Grid...
 ---- Specified parameters ----
 ---- N_R                 :    128
 ---- N_THETA             :    192
 ---- Ell_MAX             :    127
 ---- R_MIN               :  5.38462E-01
 ---- R_MAX               :  1.53846E+00
 ---- Chebyshev Domains   :      1

        Domain 1
          Grid points           :  128
          Dealiased Polynomials :  85
          Domain Lower Bound    :  5.38462E-01
          Domain Upper Bound    :  1.53846E+00

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
 -- Grid initialized.

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads,         => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads,         => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
.        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
.        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads,         => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)

orthonormalized]
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads,         => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithmorthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads,         => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)

        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
.        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
.        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
..        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
..        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm...[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes

        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
..        finding optimal algorithm.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
....[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
..        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
....[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        => using Gauss nodes
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads,         => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm.        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
..        => using Gauss nodes
.orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        => using Gauss nodes
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
.        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm..[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
...        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
..        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm....        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.....        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm...[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm....        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm....        => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm....        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm....        finding optimal algorithm.        => using Gauss nodes
..        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm        => using Gauss nodes
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
..        => using Gauss nodes
..        finding optimal algorithm.        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.....        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm..        finding optimal algorithm..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm...        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm....        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm.....        finding optimal algorithm.        => using Gauss nodes
..        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        finding optimal algorithm.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm..        finding optimal algorithm...        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
...        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
...        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        => using Gauss nodes
...        finding optimal algorithm.....        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm..        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        finding optimal algorithm..        finding optimal algorithm....        + polar optimization threshold = 1.0e-08
        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
...        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm.        => using Gauss nodes
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        + polar optimization threshold = 1.0e-08
.....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm...        finding optimal algorithm....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm..        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm.        => using Gauss nodes
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
....        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.......        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.....        finding optimal algorithm.....        => using Gauss nodes
...        => using Gauss nodes
....        finding optimal algorithm        finding optimal algorithm...        finding optimal algorithm.        finding optimal algorithm.......        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        finding optimal algorithm.        => using Gauss nodes
...        finding optimal algorithm....        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes
.....        finding optimal algorithm...        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
...        => using Gauss nodes
....        finding optimal algorithm..........        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
....        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
...        => using Gauss nodes
...............        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
...        => using Gauss nodes
..............        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.........        + polar optimization threshold = 1.0e-08
.........        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes
...        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm...        => using Gauss nodes
...        finding optimal algorithm.....        finding optimal algorithm........        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm...        => using Gauss nodes
......        finding optimal algorithm...........        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
....................        finding optimal algorithm        finding optimal algorithm....        => using Gauss nodes
.........        finding optimal algorithm......        finding optimal algorithm.............        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
....        => using Gauss nodes
.....        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
....................        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
...................        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.....        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
....................        + polar optimization threshold = 1.0e-08
        finding optimal algorithm....        => using Gauss nodes
.....        finding optimal algorithm...        finding optimal algorithm....................        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.........        + polar optimization threshold = 1.0e-08
................        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm.....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.........        + polar optimization threshold = 1.0e-08
................        finding optimal algorithm...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes
.........        finding optimal algorithm....................        finding optimal algorithm        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes.....        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm...................        finding optimal algorithm        finding optimal algorithm....
.........        + polar optimization threshold = 1.0e-08
...................        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm....        => using Gauss nodes
.....        finding optimal algorithm...        finding optimal algorithm...................        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes
.....        finding optimal algorithm...        finding optimal algorithm...................        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
....        => using Gauss nodes
.....        finding optimal algorithm...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...................        finding optimal algorithm        + polar optimization threshold = 1.0e-08
....        + polar optimization threshold = 1.0e-08
.....        finding optimal algorithm...        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
....................        finding optimal algorithm....        + polar optimization threshold = 1.0e-08
.........        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...................        => using Gauss nodes
        finding optimal algorithm....        finding optimal algorithm.........        finding optimal algorithm...................        => using Gauss nodes
        finding optimal algorithm....        + polar optimization threshold = 1.0e-08
.........        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...................        => using Gauss nodes
.....        + polar optimization threshold = 1.0e-08
.........        => using Gauss nodes
...................        + polar optimization threshold = 1.0e-08
.....        + polar optimization threshold = 1.0e-08
.........        => using Gauss nodes
...................        + polar optimization threshold = 1.0e-08
.....        finding optimal algorithm.........        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...................        finding optimal algorithm.....        + polar optimization threshold = 1.0e-08
.........        => using Gauss nodes
...................        + polar optimization threshold = 1.0e-08
.....        finding optimal algorithm.........        => using Gauss nodes
...................        + polar optimization threshold = 1.0e-08
.....        finding optimal algorithm.........        => using Gauss nodes
...................        finding optimal algorithm.....        finding optimal algorithm.............................        finding optimal algorithm.....        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.........        + polar optimization threshold = 1.0e-08
...................        finding optimal algorithm.....        finding optimal algorithm.........        + polar optimization threshold = 1.0e-08
.........................        + polar optimization threshold = 1.0e-08
.........        + polar optimization threshold = 1.0e-08
.........................        + polar optimization threshold = 1.0e-08
.........        + polar optimization threshold = 1.0e-08
.........................        + polar optimization threshold = 1.0e-08
.........        finding optimal algorithm.........................        finding optimal algorithm.........        finding optimal algorithm.........................        finding optimal algorithm.........        finding optimal algorithm...................................        + polar optimization threshold = 1.0e-08
.........................        finding optimal algorithm.........        finding optimal algorithm...................................        finding optimal algorithm.............................................................................................................................................................................................................................................[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
...................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
...................................        => using Gauss nodes
...................................        + polar optimization threshold = 1.0e-08
...................................        finding optimal algorithm
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.28e-14
        => SHTns is ready.
..............................
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
 -- Initalizing Reference State...
 ---- Specified parameters:
 ---- Reference type           :  Boussinesq (Non-dimensional)
 ---- Rayleigh Number          :  1.00000E+05
 ---- Ekman Number             :  1.00000E-03
 ---- Prandtl Number           :  1.00000E+00
 ---- Magnetic Prandtl Number  :  5.00000E+00
 -- Reference State initialized.

.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
.
        + SHT accuracy = 5.77e-14
        => SHTns is ready.
 -- Initializing Fields...
 ---- Specified parameters:
 ---- Hydro Init Type    : Benchmark (Christensen et al. 2001)
 ---- Magnetic Init Type : Benchmark (Christensen et al. 2001)
 -- Fields initialized.

 Initialization Complete.
 //////////////////////////////////////

 Timestep has changed from  0.00000E+00 to  1.00000E-04.
 Iteration:  00000001   DeltaT:  1.000E-04   Iter/sec:  0.000E+00
 Timestep has changed from  1.00000E-04 to  2.55581E-06.
 Iteration:  00000002   DeltaT:  2.556E-06   Iter/sec:  1.981E-01
 Iteration:  00000003   DeltaT:  2.556E-06   Iter/sec:  2.451E+01
 Iteration:  00000004   DeltaT:  2.556E-06   Iter/sec:  6.526E+01
 Iteration:  00000005   DeltaT:  2.556E-06   Iter/sec:  5.782E+01
 Iteration:  00000006   DeltaT:  2.556E-06   Iter/sec:  6.423E+01
 Iteration:  00000007   DeltaT:  2.556E-06   Iter/sec:  6.437E+01
 Iteration:  00000008   DeltaT:  2.556E-06   Iter/sec:  6.510E+01
 Iteration:  00000009   DeltaT:  2.556E-06   Iter/sec:  6.475E+01
 Iteration:  00000010   DeltaT:  2.556E-06   Iter/sec:  6.188E+01
 Iteration:  00000011   DeltaT:  2.556E-06   Iter/sec:  6.573E+01
 Iteration:  00000012   DeltaT:  2.556E-06   Iter/sec:  6.380E+01
 Iteration:  00000013   DeltaT:  2.556E-06   Iter/sec:  6.339E+01
 Iteration:  00000014   DeltaT:  2.556E-06   Iter/sec:  6.703E+01
 Iteration:  00000015   DeltaT:  2.556E-06   Iter/sec:  6.396E+01
 Iteration:  00000016   DeltaT:  2.556E-06   Iter/sec:  6.628E+01
 Iteration:  00000017   DeltaT:  2.556E-06   Iter/sec:  6.265E+01
 Iteration:  00000018   DeltaT:  2.556E-06   Iter/sec:  6.413E+01
 Iteration:  00000019   DeltaT:  2.556E-06   Iter/sec:  6.490E+01
 Iteration:  00000020   DeltaT:  2.556E-06   Iter/sec:  6.171E+01
 Iteration:  00000021   DeltaT:  2.556E-06   Iter/sec:  6.365E+01
 Iteration:  00000022   DeltaT:  2.556E-06   Iter/sec:  6.416E+01
 Iteration:  00000023   DeltaT:  2.556E-06   Iter/sec:  6.557E+01
 Iteration:  00000024   DeltaT:  2.556E-06   Iter/sec:  6.361E+01
 Iteration:  00000025   DeltaT:  2.556E-06   Iter/sec:  6.063E+01
 Iteration:  00000026   DeltaT:  2.556E-06   Iter/sec:  6.760E+01
 Iteration:  00000027   DeltaT:  2.556E-06   Iter/sec:  6.423E+01
 Iteration:  00000028   DeltaT:  2.556E-06   Iter/sec:  6.142E+01
 Iteration:  00000029   DeltaT:  2.556E-06   Iter/sec:  6.507E+01
 Iteration:  00000030   DeltaT:  2.556E-06   Iter/sec:  6.503E+01
 Iteration:  00000031   DeltaT:  2.556E-06   Iter/sec:  6.665E+01
 Iteration:  00000032   DeltaT:  2.556E-06   Iter/sec:  6.222E+01
 Iteration:  00000033   DeltaT:  2.556E-06   Iter/sec:  6.504E+01
 Iteration:  00000034   DeltaT:  2.556E-06   Iter/sec:  6.548E+01
 Iteration:  00000035   DeltaT:  2.556E-06   Iter/sec:  6.379E+01
 Iteration:  00000036   DeltaT:  2.556E-06   Iter/sec:  6.421E+01
 Iteration:  00000037   DeltaT:  2.556E-06   Iter/sec:  6.393E+01
 Iteration:  00000038   DeltaT:  2.556E-06   Iter/sec:  6.168E+01
 Iteration:  00000039   DeltaT:  2.556E-06   Iter/sec:  6.282E+01
 Iteration:  00000040   DeltaT:  2.556E-06   Iter/sec:  6.209E+01
 Iteration:  00000041   DeltaT:  2.556E-06   Iter/sec:  6.651E+01
 Iteration:  00000042   DeltaT:  2.556E-06   Iter/sec:  6.021E+01
 Iteration:  00000043   DeltaT:  2.556E-06   Iter/sec:  6.634E+01
 Iteration:  00000044   DeltaT:  2.556E-06   Iter/sec:  6.243E+01
 Iteration:  00000045   DeltaT:  2.556E-06   Iter/sec:  6.133E+01
 Iteration:  00000046   DeltaT:  2.556E-06   Iter/sec:  6.557E+01
 Iteration:  00000047   DeltaT:  2.556E-06   Iter/sec:  6.526E+01
 Iteration:  00000048   DeltaT:  2.556E-06   Iter/sec:  6.278E+01
 Iteration:  00000049   DeltaT:  2.556E-06   Iter/sec:  6.217E+01
 Iteration:  00000050   DeltaT:  2.556E-06   Iter/sec:  6.133E+01


//////////////////////////////////////////////
   Measured Timings for Process 0  (seconds)

 Elapsed time:         1.4640
  Column time:         0.2532
     Row time:         0.1996
Legendre time:         0.0755
     FFT time:         0.0351
   Solve time:         0.1211
    rlma time:         0.0127
    rlmb time:         0.0051
  pspace time:         0.0242
  psolve time:         0.0954
    dphi time:         0.0033
captured time:         0.8253

     iter/sec:        33.4691
//////////////////////////////////////////////
