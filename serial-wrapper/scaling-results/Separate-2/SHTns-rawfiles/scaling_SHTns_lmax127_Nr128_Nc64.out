 //////////////////////////////////////
 Initializating Rayleigh...

 -- Initalizing MPI...
 ---- Specified parameters:
 ---- NCPU  :     64
 ---- NPROW :      8
 ---- NPCOL :      8
 -- MPI initialized.


 -- Initalizing Grid...
 ---- Specified parameters ----
 ---- N_R                 :    128
 ---- N_THETA             :    192
 ---- Ell_MAX             :    127
 ---- R_MIN               :  5.38462E-01
 ---- R_MAX               :  1.53846E+00
 ---- Chebyshev Domains   :      1

        Domain 1
          Grid points           :  128
          Dealiased Polynomials :  85
          Domain Lower Bound    :  5.38462E-01
          Domain Upper Bound    :  1.53846E+00

 -- Grid initialized.

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        finding optimal algorithm......        finding optimal algorithm.......        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
 -- Initalizing Reference State...
 ---- Specified parameters:
 ---- Reference type           :  Boussinesq (Non-dimensional)
 ---- Rayleigh Number          :  1.00000E+05
 ---- Ekman Number             :  1.00000E-03
 ---- Prandtl Number           :  1.00000E+00
 ---- Magnetic Prandtl Number  :  5.00000E+00
 -- Reference State initialized.

        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
        + SHT accuracy = 4.01e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.02e-14
        => SHTns is ready.
..
        + SHT accuracy = 4.14e-14
        => SHTns is ready.
 -- Initializing Fields...
 ---- Specified parameters:
 ---- Hydro Init Type    : Benchmark (Christensen et al. 2001)
 ---- Magnetic Init Type : Benchmark (Christensen et al. 2001)
 -- Fields initialized.

 Initialization Complete.
 //////////////////////////////////////

 Timestep has changed from  0.00000E+00 to  1.00000E-04.
 Iteration:  00000001   DeltaT:  1.000E-04   Iter/sec:  0.000E+00
 Timestep has changed from  1.00000E-04 to  2.55581E-06.
 Iteration:  00000002   DeltaT:  2.556E-06   Iter/sec:  2.033E-01
 Iteration:  00000003   DeltaT:  2.556E-06   Iter/sec:  2.902E+00
 Iteration:  00000004   DeltaT:  2.556E-06   Iter/sec:  3.990E+00
 Iteration:  00000005   DeltaT:  2.556E-06   Iter/sec:  3.948E+00
 Iteration:  00000006   DeltaT:  2.556E-06   Iter/sec:  3.884E+00
 Iteration:  00000007   DeltaT:  2.556E-06   Iter/sec:  3.953E+00
 Iteration:  00000008   DeltaT:  2.556E-06   Iter/sec:  3.961E+00
 Iteration:  00000009   DeltaT:  2.556E-06   Iter/sec:  3.904E+00
 Iteration:  00000010   DeltaT:  2.556E-06   Iter/sec:  3.979E+00
 Iteration:  00000011   DeltaT:  2.556E-06   Iter/sec:  3.980E+00
 Iteration:  00000012   DeltaT:  2.556E-06   Iter/sec:  3.973E+00
 Iteration:  00000013   DeltaT:  2.556E-06   Iter/sec:  3.911E+00
 Iteration:  00000014   DeltaT:  2.556E-06   Iter/sec:  3.917E+00
 Iteration:  00000015   DeltaT:  2.556E-06   Iter/sec:  3.888E+00
 Iteration:  00000016   DeltaT:  2.556E-06   Iter/sec:  3.963E+00
 Iteration:  00000017   DeltaT:  2.556E-06   Iter/sec:  3.879E+00
 Iteration:  00000018   DeltaT:  2.556E-06   Iter/sec:  3.950E+00
 Iteration:  00000019   DeltaT:  2.556E-06   Iter/sec:  3.947E+00
 Iteration:  00000020   DeltaT:  2.556E-06   Iter/sec:  3.912E+00
 Iteration:  00000021   DeltaT:  2.556E-06   Iter/sec:  3.952E+00
 Iteration:  00000022   DeltaT:  2.556E-06   Iter/sec:  3.994E+00
 Iteration:  00000023   DeltaT:  2.556E-06   Iter/sec:  3.935E+00
 Iteration:  00000024   DeltaT:  2.556E-06   Iter/sec:  3.932E+00
 Iteration:  00000025   DeltaT:  2.556E-06   Iter/sec:  3.917E+00
 Iteration:  00000026   DeltaT:  2.556E-06   Iter/sec:  4.016E+00
 Iteration:  00000027   DeltaT:  2.556E-06   Iter/sec:  3.906E+00
 Iteration:  00000028   DeltaT:  2.556E-06   Iter/sec:  3.964E+00
 Iteration:  00000029   DeltaT:  2.556E-06   Iter/sec:  3.972E+00
 Iteration:  00000030   DeltaT:  2.556E-06   Iter/sec:  3.875E+00
 Iteration:  00000031   DeltaT:  2.556E-06   Iter/sec:  3.873E+00
 Iteration:  00000032   DeltaT:  2.556E-06   Iter/sec:  3.958E+00
 Iteration:  00000033   DeltaT:  2.556E-06   Iter/sec:  3.945E+00
 Iteration:  00000034   DeltaT:  2.556E-06   Iter/sec:  3.899E+00
 Iteration:  00000035   DeltaT:  2.556E-06   Iter/sec:  3.971E+00
 Iteration:  00000036   DeltaT:  2.556E-06   Iter/sec:  3.930E+00
 Iteration:  00000037   DeltaT:  2.556E-06   Iter/sec:  3.871E+00
 Iteration:  00000038   DeltaT:  2.556E-06   Iter/sec:  3.950E+00
 Iteration:  00000039   DeltaT:  2.556E-06   Iter/sec:  3.972E+00
 Iteration:  00000040   DeltaT:  2.556E-06   Iter/sec:  3.922E+00
 Iteration:  00000041   DeltaT:  2.556E-06   Iter/sec:  3.923E+00
 Iteration:  00000042   DeltaT:  2.556E-06   Iter/sec:  3.980E+00
 Iteration:  00000043   DeltaT:  2.556E-06   Iter/sec:  3.895E+00
 Iteration:  00000044   DeltaT:  2.556E-06   Iter/sec:  3.977E+00
 Iteration:  00000045   DeltaT:  2.556E-06   Iter/sec:  3.917E+00
 Iteration:  00000046   DeltaT:  2.556E-06   Iter/sec:  3.908E+00
 Iteration:  00000047   DeltaT:  2.556E-06   Iter/sec:  3.881E+00
 Iteration:  00000048   DeltaT:  2.556E-06   Iter/sec:  3.958E+00
 Iteration:  00000049   DeltaT:  2.556E-06   Iter/sec:  3.910E+00
 Iteration:  00000050   DeltaT:  2.556E-06   Iter/sec:  3.873E+00


//////////////////////////////////////////////
   Measured Timings for Process 0  (seconds)

 Elapsed time:        13.2554
  Column time:         0.9537
     Row time:         4.4735
Legendre time:         1.6781
     FFT time:         1.0312
   Solve time:         0.5395
    rlma time:         0.1982
    rlmb time:         0.0719
  pspace time:         2.0194
  psolve time:         1.6513
    dphi time:         0.1003
captured time:        12.7172

     iter/sec:         3.6966
//////////////////////////////////////////////
