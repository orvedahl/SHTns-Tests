 //////////////////////////////////////
 Initializating Rayleigh...

 -- Initalizing MPI...
 ---- Specified parameters:
 ---- NCPU  :     64
 ---- NPROW :      8
 ---- NPCOL :      8
 -- MPI initialized.


 -- Initalizing Grid...
 ---- Specified parameters ----
 ---- N_R                 :     64
 ---- N_THETA             :    384
 ---- Ell_MAX             :    255
 ---- R_MIN               :  5.38462E-01
 ---- R_MAX               :  1.53846E+00
 ---- Chebyshev Domains   :      1

        Domain 1
          Grid points           :  64
          Dealiased Polynomials :  42
          Domain Lower Bound    :  5.38462E-01
          Domain Upper Bound    :  1.53846E+00

 -- Grid initialized.

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm........        finding optimal algorithm        finding optimal algorithm...............        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.........[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
.....................[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
...[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm............        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
............        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm............................................................................................................................................................................................................................................
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
 -- Initalizing Reference State...
 ---- Specified parameters:
 ---- Reference type           :  Boussinesq (Non-dimensional)
 ---- Rayleigh Number          :  1.00000E+05
 ---- Ekman Number             :  1.00000E-03
 ---- Prandtl Number           :  1.00000E+00
 ---- Magnetic Prandtl Number  :  5.00000E+00
 -- Reference State initialized.

        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
        + SHT accuracy = 1.6e-12
        => SHTns is ready.
 -- Initializing Fields...
 ---- Specified parameters:
 ---- Hydro Init Type    : Benchmark (Christensen et al. 2001)
 ---- Magnetic Init Type : Benchmark (Christensen et al. 2001)
 -- Fields initialized.

 Initialization Complete.
 //////////////////////////////////////

 Timestep has changed from  0.00000E+00 to  1.00000E-04.
 Iteration:  00000001   DeltaT:  1.000E-04   Iter/sec:  0.000E+00
 Timestep has changed from  1.00000E-04 to  1.02211E-05.
 Iteration:  00000002   DeltaT:  1.022E-05   Iter/sec:  2.280E-01
 Iteration:  00000003   DeltaT:  1.022E-05   Iter/sec:  1.736E+00
 Iteration:  00000004   DeltaT:  1.022E-05   Iter/sec:  1.798E+00
 Iteration:  00000005   DeltaT:  1.022E-05   Iter/sec:  1.787E+00
 Iteration:  00000006   DeltaT:  1.022E-05   Iter/sec:  1.820E+00
 Iteration:  00000007   DeltaT:  1.022E-05   Iter/sec:  1.817E+00
 Iteration:  00000008   DeltaT:  1.022E-05   Iter/sec:  1.847E+00
 Iteration:  00000009   DeltaT:  1.022E-05   Iter/sec:  1.815E+00
 Iteration:  00000010   DeltaT:  1.022E-05   Iter/sec:  1.782E+00
 Iteration:  00000011   DeltaT:  1.022E-05   Iter/sec:  1.818E+00
 Iteration:  00000012   DeltaT:  1.022E-05   Iter/sec:  1.812E+00
 Iteration:  00000013   DeltaT:  1.022E-05   Iter/sec:  1.790E+00
 Iteration:  00000014   DeltaT:  1.022E-05   Iter/sec:  1.856E+00
 Iteration:  00000015   DeltaT:  1.022E-05   Iter/sec:  1.779E+00
 Iteration:  00000016   DeltaT:  1.022E-05   Iter/sec:  1.832E+00
 Iteration:  00000017   DeltaT:  1.022E-05   Iter/sec:  1.774E+00
 Iteration:  00000018   DeltaT:  1.022E-05   Iter/sec:  1.830E+00
 Iteration:  00000019   DeltaT:  1.022E-05   Iter/sec:  1.821E+00
 Iteration:  00000020   DeltaT:  1.022E-05   Iter/sec:  1.769E+00
 Iteration:  00000021   DeltaT:  1.022E-05   Iter/sec:  1.806E+00
 Iteration:  00000022   DeltaT:  1.022E-05   Iter/sec:  1.788E+00
 Iteration:  00000023   DeltaT:  1.022E-05   Iter/sec:  1.847E+00
 Iteration:  00000024   DeltaT:  1.022E-05   Iter/sec:  1.798E+00
 Iteration:  00000025   DeltaT:  1.022E-05   Iter/sec:  1.822E+00
 Iteration:  00000026   DeltaT:  1.022E-05   Iter/sec:  1.782E+00
 Iteration:  00000027   DeltaT:  1.022E-05   Iter/sec:  1.810E+00
 Iteration:  00000028   DeltaT:  1.022E-05   Iter/sec:  1.837E+00
 Iteration:  00000029   DeltaT:  1.022E-05   Iter/sec:  1.838E+00
 Iteration:  00000030   DeltaT:  1.022E-05   Iter/sec:  1.783E+00
 Iteration:  00000031   DeltaT:  1.022E-05   Iter/sec:  1.846E+00
 Iteration:  00000032   DeltaT:  1.022E-05   Iter/sec:  1.814E+00
 Iteration:  00000033   DeltaT:  1.022E-05   Iter/sec:  1.815E+00
 Iteration:  00000034   DeltaT:  1.022E-05   Iter/sec:  1.763E+00
 Iteration:  00000035   DeltaT:  1.022E-05   Iter/sec:  1.822E+00
 Iteration:  00000036   DeltaT:  1.022E-05   Iter/sec:  1.798E+00
 Iteration:  00000037   DeltaT:  1.022E-05   Iter/sec:  1.857E+00
 Iteration:  00000038   DeltaT:  1.022E-05   Iter/sec:  1.774E+00
 Iteration:  00000039   DeltaT:  1.022E-05   Iter/sec:  1.843E+00
 Iteration:  00000040   DeltaT:  1.022E-05   Iter/sec:  1.751E+00
 Iteration:  00000041   DeltaT:  1.022E-05   Iter/sec:  1.856E+00
 Iteration:  00000042   DeltaT:  1.022E-05   Iter/sec:  1.787E+00
 Iteration:  00000043   DeltaT:  1.022E-05   Iter/sec:  1.775E+00
 Iteration:  00000044   DeltaT:  1.022E-05   Iter/sec:  1.795E+00
 Iteration:  00000045   DeltaT:  1.022E-05   Iter/sec:  1.801E+00
 Iteration:  00000046   DeltaT:  1.022E-05   Iter/sec:  1.803E+00
 Iteration:  00000047   DeltaT:  1.022E-05   Iter/sec:  1.811E+00
 Iteration:  00000048   DeltaT:  1.022E-05   Iter/sec:  1.797E+00
 Iteration:  00000049   DeltaT:  1.022E-05   Iter/sec:  1.810E+00
 Iteration:  00000050   DeltaT:  1.022E-05   Iter/sec:  1.807E+00


//////////////////////////////////////////////
   Measured Timings for Process 0  (seconds)

 Elapsed time:        28.4518
  Column time:         2.7311
     Row time:         8.9978
Legendre time:         5.3698
     FFT time:         1.9735
   Solve time:         0.4015
    rlma time:         0.4197
    rlmb time:         0.1847
  pspace time:         4.2828
  psolve time:         2.8349
    dphi time:         0.1927
captured time:        27.3884

     iter/sec:         1.7222
//////////////////////////////////////////////
