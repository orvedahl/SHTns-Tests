 //////////////////////////////////////
 Initializating Rayleigh...

 -- Initalizing MPI...
 ---- Specified parameters:
 ---- NCPU  :    128
 ---- NPROW :     16
 ---- NPCOL :      8
 -- MPI initialized.


 -- Initalizing Grid...
 ---- Specified parameters ----
 ---- N_R                 :    128
 ---- N_THETA             :    192
 ---- Ell_MAX             :    127
 ---- R_MIN               :  5.38462E-01
 ---- R_MAX               :  1.53846E+00
 ---- Chebyshev Domains   :      1

        Domain 1
          Grid points           :  128
          Dealiased Polynomials :  85
          Domain Lower Bound    :  5.38462E-01
          Domain Upper Bound    :  1.53846E+00

 -- Grid initialized.

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]

Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes

        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
...        finding optimal algorithm        => using Gauss nodes
...        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
...        => using Gauss nodes
        => using Gauss nodes
...        finding optimal algorithm        => using Gauss nodes
...        => using Gauss nodes
        => using Gauss nodes
..        finding optimal algorithm        => using Gauss nodes
..        finding optimal algorithm        => using Gauss nodes
..        finding optimal algorithm        => using Gauss nodes
...        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
....        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm..        finding optimal algorithm...        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
...        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm.        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm.        => using Gauss nodes
        finding optimal algorithm.        => using Gauss nodes
..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
.....        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
..        => using Gauss nodes
..        => using Gauss nodes
..        => using Gauss nodes
..        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
........................        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
........        => using Gauss nodes
..        + polar optimization threshold = 1.0e-08
.....        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm..        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm..............................................................................................................................................................................[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
....[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
.[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=127, Mmax*Mres=127, Mres=1, Nlm=8256  [1 threads, orthonormalized]
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        finding optimal algorithm        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=127, Nphi=384, Nlat=192  (data layout : phi_inc=192, theta_inc=1, phi_embed=384)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
 -- Initalizing Reference State...
 ---- Specified parameters:
 ---- Reference type           :  Boussinesq (Non-dimensional)
 ---- Rayleigh Number          :  1.00000E+05
 ---- Ekman Number             :  1.00000E-03
 ---- Prandtl Number           :  1.00000E+00
 ---- Magnetic Prandtl Number  :  5.00000E+00
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
 -- Reference State initialized.

        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.83e-14
        => SHTns is ready.
............
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
.
        + SHT accuracy = 4.45e-14
        => SHTns is ready.
 -- Initializing Fields...
 ---- Specified parameters:
 ---- Hydro Init Type    : Benchmark (Christensen et al. 2001)
 ---- Magnetic Init Type : Benchmark (Christensen et al. 2001)
 -- Fields initialized.

 Initialization Complete.
 //////////////////////////////////////

 Timestep has changed from  0.00000E+00 to  1.00000E-04.
 Iteration:  00000001   DeltaT:  1.000E-04   Iter/sec:  0.000E+00
 Timestep has changed from  1.00000E-04 to  2.55581E-06.
 Iteration:  00000002   DeltaT:  2.556E-06   Iter/sec:  1.640E-01
 Iteration:  00000003   DeltaT:  2.556E-06   Iter/sec:  4.489E+00
 Iteration:  00000004   DeltaT:  2.556E-06   Iter/sec:  8.074E+00
 Iteration:  00000005   DeltaT:  2.556E-06   Iter/sec:  8.144E+00
 Iteration:  00000006   DeltaT:  2.556E-06   Iter/sec:  8.171E+00
 Iteration:  00000007   DeltaT:  2.556E-06   Iter/sec:  7.989E+00
 Iteration:  00000008   DeltaT:  2.556E-06   Iter/sec:  8.060E+00
 Iteration:  00000009   DeltaT:  2.556E-06   Iter/sec:  8.213E+00
 Iteration:  00000010   DeltaT:  2.556E-06   Iter/sec:  8.106E+00
 Iteration:  00000011   DeltaT:  2.556E-06   Iter/sec:  8.127E+00
 Iteration:  00000012   DeltaT:  2.556E-06   Iter/sec:  8.012E+00
 Iteration:  00000013   DeltaT:  2.556E-06   Iter/sec:  8.223E+00
 Iteration:  00000014   DeltaT:  2.556E-06   Iter/sec:  8.118E+00
 Iteration:  00000015   DeltaT:  2.556E-06   Iter/sec:  8.274E+00
 Iteration:  00000016   DeltaT:  2.556E-06   Iter/sec:  8.176E+00
 Iteration:  00000017   DeltaT:  2.556E-06   Iter/sec:  8.008E+00
 Iteration:  00000018   DeltaT:  2.556E-06   Iter/sec:  8.196E+00
 Iteration:  00000019   DeltaT:  2.556E-06   Iter/sec:  8.003E+00
 Iteration:  00000020   DeltaT:  2.556E-06   Iter/sec:  8.253E+00
 Iteration:  00000021   DeltaT:  2.556E-06   Iter/sec:  8.226E+00
 Iteration:  00000022   DeltaT:  2.556E-06   Iter/sec:  8.106E+00
 Iteration:  00000023   DeltaT:  2.556E-06   Iter/sec:  8.415E+00
 Iteration:  00000024   DeltaT:  2.556E-06   Iter/sec:  8.118E+00
 Iteration:  00000025   DeltaT:  2.556E-06   Iter/sec:  8.122E+00
 Iteration:  00000026   DeltaT:  2.556E-06   Iter/sec:  8.176E+00
 Iteration:  00000027   DeltaT:  2.556E-06   Iter/sec:  8.099E+00
 Iteration:  00000028   DeltaT:  2.556E-06   Iter/sec:  8.291E+00
 Iteration:  00000029   DeltaT:  2.556E-06   Iter/sec:  8.150E+00
 Iteration:  00000030   DeltaT:  2.556E-06   Iter/sec:  8.458E+00
 Iteration:  00000031   DeltaT:  2.556E-06   Iter/sec:  8.103E+00
 Iteration:  00000032   DeltaT:  2.556E-06   Iter/sec:  8.520E+00
 Iteration:  00000033   DeltaT:  2.556E-06   Iter/sec:  8.315E+00
 Iteration:  00000034   DeltaT:  2.556E-06   Iter/sec:  8.237E+00
 Iteration:  00000035   DeltaT:  2.556E-06   Iter/sec:  8.113E+00
 Iteration:  00000036   DeltaT:  2.556E-06   Iter/sec:  8.237E+00
 Iteration:  00000037   DeltaT:  2.556E-06   Iter/sec:  8.234E+00
 Iteration:  00000038   DeltaT:  2.556E-06   Iter/sec:  8.333E+00
 Iteration:  00000039   DeltaT:  2.556E-06   Iter/sec:  8.223E+00
 Iteration:  00000040   DeltaT:  2.556E-06   Iter/sec:  8.055E+00
 Iteration:  00000041   DeltaT:  2.556E-06   Iter/sec:  8.252E+00
 Iteration:  00000042   DeltaT:  2.556E-06   Iter/sec:  8.339E+00
 Iteration:  00000043   DeltaT:  2.556E-06   Iter/sec:  8.071E+00
 Iteration:  00000044   DeltaT:  2.556E-06   Iter/sec:  8.180E+00
 Iteration:  00000045   DeltaT:  2.556E-06   Iter/sec:  8.472E+00
 Iteration:  00000046   DeltaT:  2.556E-06   Iter/sec:  8.243E+00
 Iteration:  00000047   DeltaT:  2.556E-06   Iter/sec:  8.177E+00
 Iteration:  00000048   DeltaT:  2.556E-06   Iter/sec:  8.381E+00
 Iteration:  00000049   DeltaT:  2.556E-06   Iter/sec:  7.978E+00
 Iteration:  00000050   DeltaT:  2.556E-06   Iter/sec:  8.312E+00


//////////////////////////////////////////////
   Measured Timings for Process 0  (seconds)

 Elapsed time:         6.6064
  Column time:         0.6462
     Row time:         2.1452
Legendre time:         0.6637
     FFT time:         0.4899
   Solve time:         0.4275
    rlma time:         0.0783
    rlmb time:         0.0338
  pspace time:         0.9742
  psolve time:         0.7121
    dphi time:         0.0681
captured time:         6.2391

     iter/sec:         7.4170
//////////////////////////////////////////////
