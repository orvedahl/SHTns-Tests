 //////////////////////////////////////
 Initializating Rayleigh...

 -- Initalizing MPI...
 ---- Specified parameters:
 ---- NCPU  :   1024
 ---- NPROW :     32
 ---- NPCOL :     32
 -- MPI initialized.


 -- Initalizing Grid...
 ---- Specified parameters ----
 ---- N_R                 :    128
 ---- N_THETA             :   1536
 ---- Ell_MAX             :   1023
 ---- R_MIN               :  5.38462E-01
 ---- R_MAX               :  1.53846E+00
 ---- Chebyshev Domains   :      1

        Domain 1
          Grid points           :  128
          Dealiased Polynomials :  85
          Domain Lower Bound    :  5.38462E-01
          Domain Upper Bound    :  1.53846E+00

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
 -- Grid initialized.

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads,         => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        => using Gauss nodes
                => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads,         => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]

        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)

        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads,         => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads,         => using Gauss nodes
orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]        finding optimal algorithm
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)

        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads,         finding optimal algorithm        => using Gauss nodes
orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes

        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
                => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
                => using Gauss nodes
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
                => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads,         finding optimal algorithmorthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]        + polar optimization threshold = 1.0e-08

        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]

        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]        => using Gauss nodes

        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=1023, Mmax*Mres=1023, Mres=1, Nlm=524800  [1 threads, orthonormalized]
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=1023, Nphi=3072, Nlat=1536  (data layout : phi_inc=1536, theta_inc=1, phi_embed=3072)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 3.09e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
 -- Initalizing Reference State...
 ---- Specified parameters:
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
 ---- Reference type           :  Boussinesq (Non-dimensional)
 ---- Rayleigh Number          :  1.00000E+05
 ---- Ekman Number             :  1.00000E-03
 ---- Prandtl Number           :  1.00000E+00
 ---- Magnetic Prandtl Number  :  5.00000E+00
 -- Reference State initialized.

        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
        + SHT accuracy = 2.53e-12
        => SHTns is ready.
 -- Initializing Fields...
 ---- Specified parameters:
 ---- Hydro Init Type    : Benchmark (Christensen et al. 2001)
 ---- Magnetic Init Type : Benchmark (Christensen et al. 2001)
 -- Fields initialized.

 Initialization Complete.
 //////////////////////////////////////

 Timestep has changed from  0.00000E+00 to  1.00000E-04.
 Iteration:  00000001   DeltaT:  1.000E-04   Iter/sec:  0.000E+00
MPT ERROR: Rank 31(g:31) received signal SIGSEGV(11).
	Process ID: 22142, Host: r605i7n0, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------

MPT: -----stack traceback ends-----
MPT: On host r605i7n0, Program /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt, Rank 31, Process 22142: Dumping core on signal SIGSEGV(11) into directory /nobackupp8/rorvedah/SHTns-vs-Rayleigh/Scaling/1024-cores
MPT ERROR: Rank 710(g:710) received signal SIGSEGV(11).
	Process ID: 88631, Host: r623i4n1, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: Rank 614(g:614) received signal SIGSEGV(11).
	Process ID: 38674, Host: r617i7n15, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT: Program /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt, Rank 38, Process 22149: Core dump on signal SIGSEGV(11) suppressed.

MPT: -----stack traceback ends-----
MPT: On host r623i4n1, Program /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt, Rank 710, Process 88631: Dumping core on signal SIGSEGV(11) into directory /nobackupp8/rorvedah/SHTns-vs-Rayleigh/Scaling/1024-cores
MPT ERROR: Rank 166(g:166) received signal SIGSEGV(11).
	Process ID: 1115, Host: r607i0n4, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------

MPT: -----stack traceback ends-----
MPT: On host r617i7n15, Program /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt, Rank 614, Process 38674: Dumping core on signal SIGSEGV(11) into directory /nobackupp8/rorvedah/SHTns-vs-Rayleigh/Scaling/1024-cores
MPT ERROR: Rank 518(g:518) received signal SIGSEGV(11).
	Process ID: 4339, Host: r607i6n8, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: Rank 678(g:678) received signal SIGSEGV(11).
	Process ID: 5918, Host: r623i4n0, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: Rank 486(g:486) received signal SIGSEGV(11).
	Process ID: 72356, Host: r607i6n5, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: Rank 422(g:422) received signal SIGSEGV(11).
	Process ID: 10234, Host: r607i6n1, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: Rank 294(g:294) received signal SIGSEGV(11).
	Process ID: 31652, Host: r607i0n17, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: Rank 326(g:326) received signal SIGSEGV(11).
	Process ID: 30849, Host: r607i2n2, Program: /home1/rorvedah/Programs/Rayleigh-Fork/bin/Rayleigh.SHTns.opt
	MPT Version: HPE MPT 2.23  09/13/20 02:52:52

MPT: --------stack traceback-------
MPT ERROR: MPI_COMM_WORLD rank 31 has terminated without calling MPI_Finalize()
	aborting job
MPT: Received signal 11
