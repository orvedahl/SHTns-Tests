 //////////////////////////////////////
 Initializating Rayleigh...

 -- Initalizing MPI...
 ---- Specified parameters:
 ---- NCPU  :   1024
 ---- NPROW :     32
 ---- NPCOL :     32
 -- MPI initialized.


 -- Initalizing Grid...
 ---- Specified parameters ----
 ---- N_R                 :     64
 ---- N_THETA             :    384
 ---- Ell_MAX             :    255
 ---- R_MIN               :  5.38462E-01
 ---- R_MAX               :  1.53846E+00
 ---- Chebyshev Domains   :      1

        Domain 1
          Grid points           :  64
          Dealiased Polynomials :  42
          Domain Lower Bound    :  5.38462E-01
          Domain Upper Bound    :  1.53846E+00

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
 -- Grid initialized.

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized][SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)

[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, [SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm.        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads,         => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
orthonormalized]
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm.        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
.        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using Gauss nodes
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        => using Gauss nodes
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        => using Gauss nodes
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm..        finding optimal algorithm[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm..        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
..        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm..        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm..        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
..        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm..        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm.        finding optimal algorithm...        finding optimal algorithm        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm..        + polar optimization threshold = 1.0e-08
        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm...        finding optimal algorithm        => using Gauss nodes
..        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm..        finding optimal algorithm        finding optimal algorithm        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
.....        finding optimal algorithm        => using Gauss nodes
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm...        finding optimal algorithm.        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm...        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm....        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
......        => using Gauss nodes
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm...        + polar optimization threshold = 1.0e-08
.        + polar optimization threshold = 1.0e-08
..............        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
......        => using Gauss nodes
..        finding optimal algorithm        finding optimal algorithm.        finding optimal algorithm...        finding optimal algorithm.        finding optimal algorithm..............        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
......        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
...        finding optimal algorithm.        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
.....        finding optimal algorithm..............        finding optimal algorithm.        + polar optimization threshold = 1.0e-08
......        => using Gauss nodes
...        finding optimal algorithm.        finding optimal algorithm.....        finding optimal algorithm..............        + polar optimization threshold = 1.0e-08
.        finding optimal algorithm......        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm.        => using Gauss nodes
.....        finding optimal algorithm..............        finding optimal algorithm.        finding optimal algorithm......        + polar optimization threshold = 1.0e-08
...        finding optimal algorithm.......        finding optimal algorithm................        finding optimal algorithm......        + polar optimization threshold = 1.0e-08
.....        + polar optimization threshold = 1.0e-08
.....        + polar optimization threshold = 1.0e-08
................        finding optimal algorithm......        + polar optimization threshold = 1.0e-08
.....        finding optimal algorithm.....        + polar optimization threshold = 1.0e-08
................        finding optimal algorithm......        finding optimal algorithm...........        finding optimal algorithm................        finding optimal algorithm......        finding optimal algorithm...........        finding optimal algorithm................        finding optimal algorithm......        finding optimal algorithm............................        finding optimal algorithm......        finding optimal algorithm...................................        + polar optimization threshold = 1.0e-08
.......................................................................        finding optimal algorithm.................................................................[SHTns 3.4.5] built Apr 19 2021, 13:29:57, id: avx,ishioka
        Lmax=255, Mmax*Mres=255, Mres=1, Nlm=32896  [1 threads, orthonormalized]
...............................................................................................................................................        => using FFTW : Mmax=255, Nphi=768, Nlat=384  (data layout : phi_inc=384, theta_inc=1, phi_embed=768)
...................................        => using Gauss nodes
...................................        + polar optimization threshold = 1.0e-08
...................................        finding optimal algorithm
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
 -- Initalizing Reference State...
 ---- Specified parameters:
 ---- Reference type           :  Boussinesq (Non-dimensional)
 ---- Rayleigh Number          :  1.00000E+05
 ---- Ekman Number             :  1.00000E-03
 ---- Prandtl Number           :  1.00000E+00
 ---- Magnetic Prandtl Number  :  5.00000E+00
.
 -- Reference State initialized.

.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
.
.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
        + SHT accuracy = 2.41e-12
        => SHTns is ready.
 -- Initializing Fields...
 ---- Specified parameters:
 ---- Hydro Init Type    : Benchmark (Christensen et al. 2001)
 ---- Magnetic Init Type : Benchmark (Christensen et al. 2001)
 -- Fields initialized.

 Initialization Complete.
 //////////////////////////////////////

 Timestep has changed from  0.00000E+00 to  1.00000E-04.
 Iteration:  00000001   DeltaT:  1.000E-04   Iter/sec:  0.000E+00
 Timestep has changed from  1.00000E-04 to  1.02211E-05.
 Iteration:  00000002   DeltaT:  1.022E-05   Iter/sec:  2.685E-01
 Iteration:  00000003   DeltaT:  1.022E-05   Iter/sec:  2.182E+01
 Iteration:  00000004   DeltaT:  1.022E-05   Iter/sec:  2.340E+01
 Iteration:  00000005   DeltaT:  1.022E-05   Iter/sec:  7.469E+00
 Iteration:  00000006   DeltaT:  1.022E-05   Iter/sec:  1.479E+01
 Iteration:  00000007   DeltaT:  1.022E-05   Iter/sec:  1.671E+01
 Iteration:  00000008   DeltaT:  1.022E-05   Iter/sec:  2.837E+01
 Iteration:  00000009   DeltaT:  1.022E-05   Iter/sec:  2.872E+01
 Iteration:  00000010   DeltaT:  1.022E-05   Iter/sec:  2.890E+01
 Iteration:  00000011   DeltaT:  1.022E-05   Iter/sec:  2.784E+01
 Iteration:  00000012   DeltaT:  1.022E-05   Iter/sec:  1.595E+01
 Iteration:  00000013   DeltaT:  1.022E-05   Iter/sec:  9.658E+00
 Iteration:  00000014   DeltaT:  1.022E-05   Iter/sec:  2.714E+01
 Iteration:  00000015   DeltaT:  1.022E-05   Iter/sec:  2.690E+01
 Iteration:  00000016   DeltaT:  1.022E-05   Iter/sec:  2.969E+01
 Iteration:  00000017   DeltaT:  1.022E-05   Iter/sec:  1.075E+01
 Iteration:  00000018   DeltaT:  1.022E-05   Iter/sec:  2.642E+01
 Iteration:  00000019   DeltaT:  1.022E-05   Iter/sec:  2.226E+01
 Iteration:  00000020   DeltaT:  1.022E-05   Iter/sec:  2.914E+01
 Iteration:  00000021   DeltaT:  1.022E-05   Iter/sec:  2.708E+01
 Iteration:  00000022   DeltaT:  1.022E-05   Iter/sec:  8.453E+00
 Iteration:  00000023   DeltaT:  1.022E-05   Iter/sec:  1.223E+01
 Iteration:  00000024   DeltaT:  1.022E-05   Iter/sec:  1.684E+01
 Iteration:  00000025   DeltaT:  1.022E-05   Iter/sec:  2.842E+01
 Iteration:  00000026   DeltaT:  1.022E-05   Iter/sec:  2.693E+01
 Iteration:  00000027   DeltaT:  1.022E-05   Iter/sec:  3.085E+01
 Iteration:  00000028   DeltaT:  1.022E-05   Iter/sec:  2.738E+01
 Iteration:  00000029   DeltaT:  1.022E-05   Iter/sec:  2.643E+01
 Iteration:  00000030   DeltaT:  1.022E-05   Iter/sec:  7.718E+00
 Iteration:  00000031   DeltaT:  1.022E-05   Iter/sec:  2.423E+01
 Iteration:  00000032   DeltaT:  1.022E-05   Iter/sec:  2.988E+01
 Iteration:  00000033   DeltaT:  1.022E-05   Iter/sec:  2.771E+01
 Iteration:  00000034   DeltaT:  1.022E-05   Iter/sec:  1.210E+01
 Iteration:  00000035   DeltaT:  1.022E-05   Iter/sec:  2.424E+01
 Iteration:  00000036   DeltaT:  1.022E-05   Iter/sec:  1.962E+01
 Iteration:  00000037   DeltaT:  1.022E-05   Iter/sec:  2.711E+01
 Iteration:  00000038   DeltaT:  1.022E-05   Iter/sec:  2.890E+01
 Iteration:  00000039   DeltaT:  1.022E-05   Iter/sec:  9.131E+00
 Iteration:  00000040   DeltaT:  1.022E-05   Iter/sec:  1.244E+01
 Iteration:  00000041   DeltaT:  1.022E-05   Iter/sec:  1.932E+01
 Iteration:  00000042   DeltaT:  1.022E-05   Iter/sec:  2.880E+01
 Iteration:  00000043   DeltaT:  1.022E-05   Iter/sec:  2.810E+01
 Iteration:  00000044   DeltaT:  1.022E-05   Iter/sec:  2.937E+01
 Iteration:  00000045   DeltaT:  1.022E-05   Iter/sec:  2.939E+01
 Iteration:  00000046   DeltaT:  1.022E-05   Iter/sec:  2.810E+01
 Iteration:  00000047   DeltaT:  1.022E-05   Iter/sec:  1.551E+01
 Iteration:  00000048   DeltaT:  1.022E-05   Iter/sec:  3.050E+01
 Iteration:  00000049   DeltaT:  1.022E-05   Iter/sec:  2.924E+01
 Iteration:  00000050   DeltaT:  1.022E-05   Iter/sec:  2.824E+01


//////////////////////////////////////////////
   Measured Timings for Process 0  (seconds)

 Elapsed time:         5.1284
  Column time:         1.2515
     Row time:         0.6581
Legendre time:         0.2794
     FFT time:         0.1005
   Solve time:         0.0660
    rlma time:         0.0260
    rlmb time:         0.0109
  pspace time:         0.1029
  psolve time:         0.0972
    dphi time:         0.0098
captured time:         2.6023

     iter/sec:         9.5546
//////////////////////////////////////////////
